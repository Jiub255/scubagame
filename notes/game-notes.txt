Now it's a diving game.

TODO:
-------------

Make more enemies.
	Make more idle/wander states.
	Other chase states?

Design more level.
	Have separate levels, or just one big world?
	If one big world, break up tilemap into chunks and dynamically load/unload them,
		or have separate screens that transition to one another, old school style.
	Kinda like one big world the best. Figure out how to do tilemap chunks.
		Might not be necessary yet. The big tilemap wasn't causing the slowdown from before, not sure what was.
		But still might need eventually if the map gets huge.

Have "doors" into other maps, to represent a third dimension kind of. 2.5d-ish. Good for variety in caves/tunnels.
	Or maybe not, but do have cave entrances you can go into.
	Have enemies follow you in/out of caves if they are targeting you.

Make variety of spaces:
	tight tunnels, wide open depths, super deep pits,
	long shallow waters (with land spots you have to jump over while being chased by enemies)

Eventually try out behavior trees with enemies, for practice at least.

Make own art?
	Start with ultra simple 8x8 pixel art, use max 4 colors. At least makes for easy prototyping.
	Try procedural generation for background. Simple, like spawning random ocean features as it scrolls.
	Add swimming fish and stuff to the parallax layers.
	Try to work above horizon parallax in.
	Maybe try a different theme/idea. Doesn't have to be a diver. Maybe a fish or something. Or a submarine.
		I like the water mechanics though so keep that.
		Maybe start as a diver with no gear who swims slowly. Then you find better suits with more speed and air.
			Then you start finding vehicles, with weapons and other features. Kinda 2d subnautica ripoff idea.
			Could be fun to vary the movement physics for each vehicle/suit.

Have giant whales that can swallow you.
	Inside of them is like a mini-dungeon, with some reward at the end.

Maybe, eventually be fighting off huge swarms of enemy fish with crazy area effect weapons. Could be fun.

DONE:
-------------

Fix fish swimming in air and through land.
	(used collision layers)

Add breath system.
	Put Air level on UI.

Make another state machine for Player. Can't mix states like take damage and air. They're separate concepts.
	Maybe have a air/water state machine that controls physics like gravity.
	Then have another for combat, like take damage and die.

Make a new parallax background, but have the closest layer be the water layer, so it doesn't move.

Fix fish moving when shot.
	(accidental = instead of - in direction calculation).

Add invulnerability time after knockback so you can't get stuck in a death loop.
	Maybe put it in recovering state, so you can add movement controls again.

Have harpoon gun follow mouse, independent of travel direction.
	Then add controller support, crosscode style. Left stick movement, right stick aim.

Fix (very) different harpoon speed when aiming with mouse vs controller/number keys
	(forgot to normalize a vector during mouse input)

Fix state machines.
	(Subscribing to lambda events is causing problems on scene reload, switched to named methods to fix it.)
